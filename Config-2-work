import argparse
import json
import os

def read_config_file(config_path):
    try:
        with open(config_path, 'r') as file:
            return json.load(file)
    except Exception as e:
        print(f"Ошибка чтения конфигурационного файла: {e}")
        return {}

def parse_args():
    parser = argparse.ArgumentParser(description="Эмулятор с параметрами командной строки")
    parser.add_argument("--vfs_path", help="Путь к физическому расположению VFS")
    parser.add_argument("--script_path", help="Путь к стартовому скрипту")
    parser.add_argument("--config_path", help="Путь к конфигурационному файлу")
    return parser.parse_args()

def main():
    args = parse_args()
    config = read_config_file(args.config_path)

    # Приоритет значений из конфигурационного файла
    vfs_path = config.get("vfs_path", args.vfs_path)
    script_path = config.get("script_path", args.script_path)

    print(f"Параметры эмулятора:")
    print(f"Путь к VFS: {vfs_path}")
    print(f"Путь к скрипту: {script_path}")

    # Выполнение стартового скрипта
    if script_path:
        try:
            with open(script_path, 'r') as script_file:
                for line in script_file:
                    line = line.strip()
                    if line and not line.startswith("#"):
                        print(f"Выполняется команда: {line}")
                        # Здесь можно добавить логику выполнения команд
        except Exception as e:
            print(f"Ошибка выполнения скрипта: {e}")

if __name__ == "__main__":
    main()
